module:
  name: Types
  syntaxes:
    "? is a boolean":
      method: Concise\Modules\Types\IsABoolean::match
      description: Assert a value is true or false.

    "? is a bool":
      method: Concise\Modules\Types\IsABoolean::match
      description: Assert a value is true or false.

    "? is an array":
      method: Concise\Modules\Types\IsAnArray::match
      description: Assert a value is an array.

    "? is an int":
      method: Concise\Modules\Types\IsAnInteger::match
      description: Assert value is an integer type.

    "? is an integer":
      method: Concise\Modules\Types\IsAnInteger::match
      description: Assert value is an integer type.

    "? is an object":
      method: Concise\Modules\Types\IsAnObject::match
      description: Assert value is an object.

    "? is a number":
      method: Concise\Modules\Types\IsANumber::match
      description: Assert that a value is an integer or floating-point.

    "? is a string":
      method: Concise\Modules\Types\IsAString::match
      description: Assert value is a string.

    "?:object,class is an instance of ?:class":
      method: Concise\Modules\Types\IsInstanceOf::match
      description: Assert an objects class or subclass.

    "?:object,class is instance of ?:class":
      method: Concise\Modules\Types\IsInstanceOf::match
      description: Assert an objects class or subclass.

    "?:object,class instance of ?:class":
      method: Concise\Modules\Types\IsInstanceOf::match
      description: Assert an objects class or subclass.

    "? is not a boolean":
      method: Concise\Modules\Types\IsNotABoolean::match
      description: Assert a value is not true or false.

    "? is not a bool":
      method: Concise\Modules\Types\IsNotABoolean::match
      description: Assert a value is not true or false.

    "? is not an array":
      method: Concise\Modules\Types\IsNotAnArray::match
      description: Assert a value is not an array.

    "? is not an int":
      method: Concise\Modules\Types\IsNotAnInteger::match
      description: Assert a value is not an integer type.

    "? is not an integer":
      method: Concise\Modules\Types\IsNotAnInteger::match
      description: Assert a value is not an integer type.

    "? is not an object":
      method: Concise\Modules\Types\IsNotAnObject::match
      description: Assert a value is not an object.

    "? is not a number":
      method: Concise\Modules\Types\IsNotANumber::match
      description: Assert that a value is not an integer or floating-point.

    "? is not a string":
      method: Concise\Modules\Types\IsNotAString::match
      description: Assert a value is not a string.

    "?:object,class is not an instance of ?:class":
      method: Concise\Modules\Types\IsNotInstanceOf::match
      description: Assert than an object is not a class or subclass.

    "?:object,class is not instance of ?:class":
      method: Concise\Modules\Types\IsNotInstanceOf::match
      description: Assert than an object is not a class or subclass.

    "?:object,class not instance of ?:class":
      method: Concise\Modules\Types\IsNotInstanceOf::match
      description: Assert than an object is not a class or subclass.

    "? is not null":
      method: Concise\Modules\Types\IsNotNull::match
      description: Assert a value is not null.

    "? is not numeric":
      method: Concise\Modules\Types\IsNotNumeric::match
      description: |
        Assert value is not a number or string that represents a number.

    "? is null":
      method: Concise\Modules\Types\IsNull::match
      description: Assert a value is null.

    "? is numeric":
      method: Concise\Modules\Types\IsNumeric::match
      description: Assert value is a number or string that represents a number.
